# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-12-27 23:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('position', models.IntegerField()),
                ('target_pos_x', models.FloatField(null=True)),
                ('target_pos_y', models.FloatField(null=True)),
                ('target_pos_z', models.FloatField(null=True)),
                ('camera_pos_x', models.FloatField(null=True)),
                ('camera_pos_y', models.FloatField(null=True)),
                ('camera_pos_z', models.FloatField(null=True)),
                ('annotation_text', models.TextField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('position', models.IntegerField(help_text='Write down the position of the content as an integer. Increasing positions are placed on a top to bottom scale.')),
                ('path', models.ImageField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('position', models.IntegerField(help_text='Write down the position of the content as an integer. Increasing positions are placed on a top to bottom scale.')),
                ('description', models.TextField(max_length=5000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Render',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('object_path', models.FileField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//renders')),
                ('colormap_path', models.FileField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//renders')),
                ('specmap_path', models.FileField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//renders')),
                ('normalmap_path', models.FileField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//renders')),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField(max_length=5000)),
                ('snapshot', models.FileField(upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media/snapshots')),
                ('render', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tours.Render')),
            ],
        ),
        migrations.CreateModel(
            name='TourGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('tours', models.ManyToManyField(to='tours.Tour')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('position', models.IntegerField(help_text='Write down the position of the content as an integer. Increasing positions are placed on a top to bottom scale.')),
                ('path', models.FileField(help_text='Only mp4 format is suported', upload_to='C:\\Users\\Tfmenard\\Documents\\GitHub\\redpath_prod\\opm\\media//videos')),
                ('tour', models.ForeignKey(help_text='Select to which Tour you want to link this content', null=True, on_delete=django.db.models.deletion.CASCADE, to='tours.Tour')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='paragraph',
            name='tour',
            field=models.ForeignKey(help_text='Select to which Tour you want to link this content', null=True, on_delete=django.db.models.deletion.CASCADE, to='tours.Tour'),
        ),
        migrations.AddField(
            model_name='image',
            name='tour',
            field=models.ForeignKey(help_text='Select to which Tour you want to link this content', null=True, on_delete=django.db.models.deletion.CASCADE, to='tours.Tour'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='tour',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tours.Tour'),
        ),
    ]
